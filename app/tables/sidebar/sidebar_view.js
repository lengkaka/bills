// Generated by CoffeeScript 1.7.1
(function() {
  define(function(require, exports, module) {
    var App, TableSidebar, TableSidebarItem;
    App = require('app/application');
    TableSidebar = require('templates/table/sidebar/table_sidebar.tpl');
    TableSidebarItem = require('templates/table/sidebar/table_sidebar_item.tpl');
    return App.module('TablesApp.Sidebar', function(Sidebar, App) {
      Sidebar.Item = Marionette.ItemView.extend({
        template: TableSidebarItem,
        tagName: 'li',
        modelEvents: {
          'change': 'onRender'
        },
        onRender: function() {
          this.$el.attr('wj_table_id', this.model.get('id'));
          if (this.model.get('active')) {
            return this.$el.addClass('active');
          } else {
            return this.$el.removeClass('active');
          }
        }
      });
      return Sidebar.List = Marionette.CompositeView.extend({
        className: 'col-sm-3 sidebar container-sidebar',
        template: TableSidebar,
        itemView: Sidebar.Item,
        itemViewContainer: "ul#tables",
        events: {
          'click li[wj_table_id]': '_selectTableAction',
          'click li[wj_table_create]': '_createTableAction'
        },
        onBeforeRender: function() {
          if (App.router.action === 'tables:createTable') {

          } else if (App.router.action === 'tables:editTable' || App.router.action === 'tables:showTable') {
            this.collection.setSidebarActiveStatus(App.params.tableId, true);
            return this.curTableId = App.params.tableId;
          }
        },
        onRender: function() {
          if (App.router.action === 'tables:createTable') {
            return this.$('li[wj_table_create]').addClass('active');
          }
        },
        _selectTableAction: function(e) {
          var tableId;
          e.preventDefault();
          tableId = $(e.currentTarget).attr('wj_table_id');
          return this._changeToTable(tableId);
        },
        _changeToTable: function(tableId) {
          tableId = parseInt(tableId);
          if (tableId && this.curTableId !== tableId) {
            this.collection.setSidebarActiveStatus(this.curTableId, false);
            this.collection.setSidebarActiveStatus(tableId, true);
            this.curTableId = tableId;
            App.navigate("/tables/" + this.curTableId);
            App.commands.execute('showTable', tableId, this.collection.get(tableId));
            return this.$('[wj_table_create]').removeClass('active');
          }
        },
        _createTableAction: function(e) {
          if (this.curTableId) {
            this.collection.setSidebarActiveStatus(this.curTableId, false);
            this.curTableId = null;
          }
          $(e.currentTarget).addClass('active');
          App.commands.execute('createTable');
          App.navigate("/tables/create");
          return false;
        }
      });
    });
  });

}).call(this);
