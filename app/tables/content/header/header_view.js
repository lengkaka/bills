// Generated by CoffeeScript 1.7.1
(function() {
  define(function(require, exports, module) {
    var App;
    App = require('app/application');
    return App.module('TablesApp.content.header', function(Header, App) {
      Header.item = Marionette.ItemView.extend({
        tagName: 'li',
        template: require('templates/table/content/header/list_item.tpl'),
        modelEvents: {
          'change': 'onRender'
        },
        onRender: function() {
          this.$el.attr('table_header_id', this.model.get('id'));
          if (this.model.get('active')) {
            return this.$el.addClass('active');
          } else {
            return this.$el.removeClass('active');
          }
        }
      });
      return Header.list = Marionette.CompositeView.extend({
        className: 'header_list',
        template: require('templates/table/content/header/list.tpl'),
        itemView: Header.item,
        itemViewContainer: 'ul',
        events: {
          'click li': '_selectHeaderAction'
        },
        onBeforeRender: function() {
          var headerId;
          if (this.options.type === 'view') {
            headerId = '1';
          } else if (this.options.type === 'edit') {
            headerId = '2';
          } else if (this.options.type === 'delete') {
            headerId = '3';
          }
          return this._updateCurrentHeader(headerId);
        },
        _selectHeaderAction: function(e) {
          var $target, headerId;
          $target = $(e.currentTarget);
          headerId = parseInt($target.attr('table_header_id'));
          this._updateCurrentHeader(headerId);
          return false;
        },
        _updateCurrentHeader: function(headerId) {
          var type, url;
          if (headerId != null) {
            false;
          }
          if (headerId === this.headerId) {
            null;
          }
          this.collection.setActiveStatus(this.headerId, false);
          this.headerId = headerId;
          this.collection.setActiveStatus(this.headerId, true);
          url = "/tables/" + this.options.tableId;
          type = this.collection.get(this.headerId).get('type');
          if (type === 'view') {
            App.navigate(url);
          } else if (type === 'edit') {
            App.navigate("" + url + "/edit");
          } else if (type === 'delete') {
            App.navigate("" + url + "/delete");
          }
          App.commands.execute('showTableContent', this.options.tableId, this.options.tableModel, type);
          return false;
        },
        onRender: function() {
          return console.log('111');
        }
      });
    });
  });

}).call(this);
